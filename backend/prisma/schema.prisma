// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id_user String @id @default(uuid())
  nome_user String @db.VarChar(30)
  sobrenome_user String @db.VarChar(70)
  email_user String @db.VarChar(100)
  senha_user String @db.VarChar(200)
  imagem_user Bytes?

  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  @@map("users")
  competicoes Competicao?
  times Time?
}

model Competicao {
  id_comp Int @id @default(autoincrement())
  nome_comp String @db.VarChar(50)
  descricao_comp String @db.Text
  premiacao_comp String @db.Text
  data_ini_comp String @db.VarChar(15)
  data_termi_comp String @db.VarChar(15)
  situacao_comp String @db.VarChar(15)
  quantidade_times_comp Int

  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  @@map("competicoes")
  fk_usuario String @unique
  usuario User @relation(fields: [fk_usuario], references: [id_user])

  partidas Partida?
}

model Competidor {
  id_competidor Int @id @default(autoincrement())
  nome_competidor String @db.VarChar(100)

  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  @@map("competidores")
  times Time?
  pontuacoes MomentoDaPontuacao?
}

model Time {
  id_time Int @id @default(autoincrement())
  nome_time String @db.VarChar(20)
  imagem_time Bytes?
  abreviacao_time String @db.VarChar(5)

  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  @@map("times")

  fk_usuario String @unique
  fk_competidor Int? @unique
  usuario User @relation(fields: [fk_usuario], references: [id_user])
  competidor Competidor? @relation(fields: [fk_competidor], references: [id_competidor])
}

model MomentoDaPontuacao {
  id_momento_da_pontuacao Int @id @default(autoincrement())
  tempo_partida String @db.VarChar(100)

  @@map("pontuacoes")

  fk_competidor Int? @unique
  competidor Competidor? @relation(fields: [fk_competidor], references: [id_competidor])

  partida Partida?
}

model Partida {
  id_part Int @id @default(autoincrement())
  data_part String @db.VarChar(11)
  horario_part String @db.VarChar(6)
  local_part String @db.VarChar(50)
  placar_part String? @db.Char(5)

  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  @@map("partidas")

  fk_comp Int @unique
  fk_time1 Int?
  fk_time2 Int?
  fk_momento_da_pontuacao Int? @unique
  competicao Competicao @relation(fields: [fk_comp], references: [id_comp])
  momentoDaPontuacao MomentoDaPontuacao? @relation(fields: [fk_momento_da_pontuacao], references: [id_momento_da_pontuacao])

  estatisticas Estatistica?
}

model Estatistica {
  id_estatistica Int @id @default(autoincrement())
  nome_estatistica String @db.VarChar(1000)
  valor_estatistica Int?

  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  @@map("estatisticas")

  fk_partida Int? @unique
  partida Partida? @relation(fields: [fk_partida], references: [id_part])
}
